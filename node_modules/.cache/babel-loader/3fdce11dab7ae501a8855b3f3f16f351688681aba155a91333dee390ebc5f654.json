{"ast":null,"code":"import React,{useMemo,useState}from\"react\";import{Routes,Route}from\"react-router-dom\";import AuthProvider from\"./context/AuthContext\";import Navbar from\"./components/Navbar/Navbar\";import PrivateRoute from\"./components/RouteGuards/PrivateRoute\";import Landing from\"./pages/Landing/Landing\";import Login from\"./pages/Login/Login\";import SignUp from\"./pages/SignUp/SignUp\";import Appointment from\"./pages/Appointment/Appointment\";import Profile from\"./pages/Profile/Profile\";import InstantConsultation from\"./components/InstantConsultation/InstantConsultation\";import FindDoctorSearch from\"./components/FindDoctorSearch/FindDoctorSearch\";import DoctorCardsGrid from\"./components/DoctorCard/DoctorCard\";import AppointmentForm from\"./components/AppointmentForm/AppointmentForm\";import Notification from\"./components/Notification/Notification\";import NotificationProvider from\"./context/NotificationContext\";import ReviewForm from\"./components/ReviewForm/ReviewForm\";import ReportsLayout from\"./components/ReportsLayout/ReportsLayout\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[notifyShow,setNotifyShow]=useState(false);const[notifyCanceled,setNotifyCanceled]=useState(false);const[lastBooked,setLastBooked]=useState(null);const showNotification=appointment=>{setLastBooked(appointment||{});setNotifyCanceled(false);setNotifyShow(true);};const hideNotification=()=>{setNotifyCanceled(true);setNotifyShow(false);};const reviewRows=useMemo(()=>{const rows=[];try{for(let i=0;i<localStorage.length;i++){const key=localStorage.key(i);if(!key||!key.startsWith(\"appointments_\"))continue;const list=JSON.parse(localStorage.getItem(key)||\"[]\");if(!Array.isArray(list)||list.length===0)continue;const latest=list[0];rows.push({id:String(latest.doctorId||key.replace(\"appointments_\",\"\")),doctorName:latest.doctorName||\"Doctor\",specialty:latest.specialty||\"—\"});}rows.sort((a,b)=>a.doctorName.localeCompare(b.doctorName));}catch(_unused){}return rows;},[]);return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsxs(NotificationProvider,{value:{show:showNotification,hide:hideNotification},children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Notification,{appointment:lastBooked||{},show:notifyShow,canceled:notifyCanceled,onDismiss:()=>setNotifyShow(false),autoHideMs:6000}),/*#__PURE__*/_jsx(\"main\",{className:\"container py-6\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Landing,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(SignUp,{})}),/*#__PURE__*/_jsx(Route,{path:\"/appointments\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(Appointment,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(Profile,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/appointments/new\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(AppointmentForm,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/instant-consultation\",element:/*#__PURE__*/_jsx(InstantConsultation,{})}),/*#__PURE__*/_jsx(Route,{path:\"/find-doctor\",element:/*#__PURE__*/_jsx(FindDoctorSearch,{})}),/*#__PURE__*/_jsx(Route,{path:\"/doctors\",element:/*#__PURE__*/_jsx(DoctorCardsGrid,{})}),/*#__PURE__*/_jsx(Route,{path:\"/reviews\",element:/*#__PURE__*/_jsx(ReviewForm,{rows:reviewRows})}),/*#__PURE__*/_jsx(Route,{path:\"/reports\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(ReportsLayout,{})})})]})})]})});}","map":{"version":3,"names":["React","useMemo","useState","Routes","Route","AuthProvider","Navbar","PrivateRoute","Landing","Login","SignUp","Appointment","Profile","InstantConsultation","FindDoctorSearch","DoctorCardsGrid","AppointmentForm","Notification","NotificationProvider","ReviewForm","ReportsLayout","jsx","_jsx","jsxs","_jsxs","App","notifyShow","setNotifyShow","notifyCanceled","setNotifyCanceled","lastBooked","setLastBooked","showNotification","appointment","hideNotification","reviewRows","rows","i","localStorage","length","key","startsWith","list","JSON","parse","getItem","Array","isArray","latest","push","id","String","doctorId","replace","doctorName","specialty","sort","a","b","localeCompare","_unused","children","value","show","hide","canceled","onDismiss","autoHideMs","className","path","element"],"sources":["/home/project/stayhealthy/src/App.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport AuthProvider from \"./context/AuthContext\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport PrivateRoute from \"./components/RouteGuards/PrivateRoute\";\n\nimport Landing from \"./pages/Landing/Landing\";\nimport Login from \"./pages/Login/Login\";\nimport SignUp from \"./pages/SignUp/SignUp\";\nimport Appointment from \"./pages/Appointment/Appointment\";\nimport Profile from \"./pages/Profile/Profile\";\n\nimport InstantConsultation from \"./components/InstantConsultation/InstantConsultation\";\nimport FindDoctorSearch from \"./components/FindDoctorSearch/FindDoctorSearch\";\nimport DoctorCardsGrid from \"./components/DoctorCard/DoctorCard\";\nimport AppointmentForm from \"./components/AppointmentForm/AppointmentForm\";\n\nimport Notification from \"./components/Notification/Notification\";\nimport NotificationProvider from \"./context/NotificationContext\";\n\nimport ReviewForm from \"./components/ReviewForm/ReviewForm\";\nimport ReportsLayout from \"./components/ReportsLayout/ReportsLayout\";\n\nexport default function App() {\n  const [notifyShow, setNotifyShow] = useState(false);\n  const [notifyCanceled, setNotifyCanceled] = useState(false);\n  const [lastBooked, setLastBooked] = useState(null);\n\n  const showNotification = (appointment) => { setLastBooked(appointment || {}); setNotifyCanceled(false); setNotifyShow(true); };\n  const hideNotification = () => { setNotifyCanceled(true); setNotifyShow(false); };\n\n  const reviewRows = useMemo(() => {\n    const rows = [];\n    try {\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (!key || !key.startsWith(\"appointments_\")) continue;\n        const list = JSON.parse(localStorage.getItem(key) || \"[]\");\n        if (!Array.isArray(list) || list.length === 0) continue;\n        const latest = list[0];\n        rows.push({\n          id: String(latest.doctorId || key.replace(\"appointments_\", \"\")),\n          doctorName: latest.doctorName || \"Doctor\",\n          specialty: latest.specialty || \"—\",\n        });\n      }\n      rows.sort((a, b) => a.doctorName.localeCompare(b.doctorName));\n    } catch {}\n    return rows;\n  }, []);\n\n  return (\n    <AuthProvider>\n      <NotificationProvider value={{ show: showNotification, hide: hideNotification }}>\n        <Navbar />\n\n        <Notification appointment={lastBooked || {}} show={notifyShow} canceled={notifyCanceled} onDismiss={() => setNotifyShow(false)} autoHideMs={6000} />\n\n        <main className=\"container py-6\">\n          <Routes>\n            <Route path=\"/\" element={<Landing />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/signup\" element={<SignUp />} />\n\n            <Route path=\"/appointments\" element={<PrivateRoute><Appointment /></PrivateRoute>} />\n            <Route path=\"/profile\" element={<PrivateRoute><Profile /></PrivateRoute>} />\n            <Route path=\"/appointments/new\" element={<PrivateRoute><AppointmentForm /></PrivateRoute>} />\n\n            <Route path=\"/instant-consultation\" element={<InstantConsultation />} />\n            <Route path=\"/find-doctor\" element={<FindDoctorSearch />} />\n            <Route path=\"/doctors\" element={<DoctorCardsGrid />} />\n\n            <Route path=\"/reviews\" element={<ReviewForm rows={reviewRows} />} />\n            <Route path=\"/reports\" element={<PrivateRoute><ReportsLayout /></PrivateRoute>} />\n          </Routes>\n        </main>\n      </NotificationProvider>\n    </AuthProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}