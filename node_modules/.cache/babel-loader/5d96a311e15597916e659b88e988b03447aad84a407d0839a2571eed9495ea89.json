{"ast":null,"code":"var _jsxFileName = \"/home/project/stayhealthy/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// ✅ Declare the hook ONLY ONCE\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst LS_KEY = 'app_auth_user';\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const saved = localStorage.getItem(LS_KEY);\n    if (saved) setUser(JSON.parse(saved));\n  }, []);\n  useEffect(() => {\n    if (user) localStorage.setItem(LS_KEY, JSON.stringify(user));else localStorage.removeItem(LS_KEY);\n  }, [user]);\n  const signup = profile => setUser(profile);\n\n  // simple example login that matches saved signup email\n  const login = ({\n    email\n  }) => {\n    const saved = localStorage.getItem(LS_KEY);\n    if (!saved) throw new Error('No account found. Please sign up.');\n    const savedUser = JSON.parse(saved);\n    if (savedUser.email !== email) throw new Error('Email does not match any account.');\n    setUser(savedUser);\n  };\n  const logout = () => setUser(null);\n  const updateProfile = updates => setUser(u => ({\n    ...u,\n    ...updates\n  }));\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signup,\n      login,\n      logout,\n      updateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"yy5ZvVAQsprr2pHcLIzfQbyK1Yg=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","LS_KEY","AuthProvider","children","_s2","user","setUser","saved","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","signup","profile","login","email","Error","savedUser","logout","updateProfile","updates","u","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/project/stayhealthy/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst AuthContext = createContext(null);\n\n// ✅ Declare the hook ONLY ONCE\nexport const useAuth = () => useContext(AuthContext);\n\nconst LS_KEY = 'app_auth_user';\n\nexport default function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const saved = localStorage.getItem(LS_KEY);\n    if (saved) setUser(JSON.parse(saved));\n  }, []);\n\n  useEffect(() => {\n    if (user) localStorage.setItem(LS_KEY, JSON.stringify(user));\n    else localStorage.removeItem(LS_KEY);\n  }, [user]);\n\n  const signup = (profile) => setUser(profile);\n\n  // simple example login that matches saved signup email\n  const login = ({ email }) => {\n    const saved = localStorage.getItem(LS_KEY);\n    if (!saved) throw new Error('No account found. Please sign up.');\n    const savedUser = JSON.parse(saved);\n    if (savedUser.email !== email) throw new Error('Email does not match any account.');\n    setUser(savedUser);\n  };\n\n  const logout = () => setUser(null);\n  const updateProfile = (updates) => setUser((u) => ({ ...u, ...updates }));\n\n  return (\n    <AuthContext.Provider value={{ user, signup, login, logout, updateProfile }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,MAAME,MAAM,GAAG,eAAe;AAE9B,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACR,MAAM,CAAC;IAC1C,IAAIM,KAAK,EAAED,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,IAAIW,IAAI,EAAEG,YAAY,CAACI,OAAO,CAACX,MAAM,EAAES,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC,CAAC,KACxDG,YAAY,CAACM,UAAU,CAACb,MAAM,CAAC;EACtC,CAAC,EAAE,CAACI,IAAI,CAAC,CAAC;EAEV,MAAMU,MAAM,GAAIC,OAAO,IAAKV,OAAO,CAACU,OAAO,CAAC;;EAE5C;EACA,MAAMC,KAAK,GAAGA,CAAC;IAAEC;EAAM,CAAC,KAAK;IAC3B,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACR,MAAM,CAAC;IAC1C,IAAI,CAACM,KAAK,EAAE,MAAM,IAAIY,KAAK,CAAC,mCAAmC,CAAC;IAChE,MAAMC,SAAS,GAAGV,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;IACnC,IAAIa,SAAS,CAACF,KAAK,KAAKA,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;IACnFb,OAAO,CAACc,SAAS,CAAC;EACpB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAMf,OAAO,CAAC,IAAI,CAAC;EAClC,MAAMgB,aAAa,GAAIC,OAAO,IAAKjB,OAAO,CAAEkB,CAAC,KAAM;IAAE,GAAGA,CAAC;IAAE,GAAGD;EAAQ,CAAC,CAAC,CAAC;EAEzE,oBACE1B,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEU,MAAM;MAAEE,KAAK;MAAEI,MAAM;MAAEC;IAAc,CAAE;IAAAnB,QAAA,EACzEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC1B,GAAA,CAhCuBF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}